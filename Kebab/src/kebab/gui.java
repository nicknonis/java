
package kebab;

import java.awt.event.ItemEvent;
import javax.swing.JOptionPane;

/**
 *
 * @author Unknown
 */
public class gui extends javax.swing.JFrame {
    private int totalkebab = 0; // total kebabs selected
    private int totalsides = 0; // total selected sides / add ons
    private String sizen; //selected size 
    private int[] i1 = new int[7]; //array for kebab selection
    private int[] i2 = new int [8]; // array for add on selection

    /**
     * Creates new form gui
     */
    public gui() {
        initComponents();
        initJRadio();
    }


    @SuppressWarnings("unchecked")
    
    
     /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        kebabsize = new javax.swing.ButtonGroup();
        kebabpane = new javax.swing.JPanel();
        kebabtypetitle = new javax.swing.JLabel();
        ckebab = new javax.swing.JCheckBox();
        kkebab = new javax.swing.JCheckBox();
        kmc = new javax.swing.JCheckBox();
        cskebab = new javax.swing.JCheckBox();
        mskebab = new javax.swing.JCheckBox();
        mkebab = new javax.swing.JCheckBox();
        kebabsizepane = new javax.swing.JPanel();
        small = new javax.swing.JRadioButton();
        medium = new javax.swing.JRadioButton();
        large = new javax.swing.JRadioButton();
        sizetitle = new javax.swing.JLabel();
        addonpane = new javax.swing.JPanel();
        addonstitle = new javax.swing.JLabel();
        sigsidestitle = new javax.swing.JLabel();
        dessertstitle = new javax.swing.JLabel();
        softdrinktitle = new javax.swing.JLabel();
        slaw = new javax.swing.JCheckBox();
        salad = new javax.swing.JCheckBox();
        bpie = new javax.swing.JCheckBox();
        cfcake = new javax.swing.JCheckBox();
        fanta = new javax.swing.JCheckBox();
        coke = new javax.swing.JCheckBox();
        water = new javax.swing.JCheckBox();
        orderpane = new javax.swing.JPanel();
        ktypepro = new javax.swing.JLabel();
        ksizepro = new javax.swing.JLabel();
        addonpro = new javax.swing.JLabel();
        amtduepro = new javax.swing.JLabel();
        ktype = new javax.swing.JLabel();
        ksize = new javax.swing.JLabel();
        amtdue = new javax.swing.JLabel();
        addons = new javax.swing.JLabel();
        process = new javax.swing.JButton();
        exitp = new javax.swing.JButton();
        title = new javax.swing.JLabel();
        orderlabel = new javax.swing.JLabel();
        clearch = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        kebabpane.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        kebabtypetitle.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        kebabtypetitle.setText("Kebab Type");

        ckebab.setText("Chicken Kebab");
        ckebab.setToolTipText("");
        ckebab.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                ckebabItemStateChanged(evt);
            }
        });

        kkebab.setText("Kofteh Kebab");
        kkebab.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                kkebabItemStateChanged(evt);
            }
        });

        kmc.setText("Kebab Meat & Chips");
        kmc.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                kmcItemStateChanged(evt);
            }
        });

        cskebab.setText("Chicken Shish Kebab");
        cskebab.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cskebabItemStateChanged(evt);
            }
        });

        mskebab.setText("Meat Shish Kebab");
        mskebab.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                mskebabItemStateChanged(evt);
            }
        });

        mkebab.setText("Mixed Kebab");
        mkebab.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                mkebabItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout kebabpaneLayout = new javax.swing.GroupLayout(kebabpane);
        kebabpane.setLayout(kebabpaneLayout);
        kebabpaneLayout.setHorizontalGroup(
            kebabpaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(kebabpaneLayout.createSequentialGroup()
                .addGroup(kebabpaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(kebabpaneLayout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addComponent(kebabtypetitle, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(kebabpaneLayout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addGroup(kebabpaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ckebab)
                            .addComponent(kkebab)
                            .addComponent(kmc)
                            .addComponent(cskebab)
                            .addComponent(mskebab)
                            .addComponent(mkebab))))
                .addGap(0, 37, Short.MAX_VALUE))
        );
        kebabpaneLayout.setVerticalGroup(
            kebabpaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(kebabpaneLayout.createSequentialGroup()
                .addComponent(kebabtypetitle, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(ckebab)
                .addGap(18, 18, 18)
                .addComponent(kkebab)
                .addGap(18, 18, 18)
                .addComponent(kmc)
                .addGap(18, 18, 18)
                .addComponent(cskebab)
                .addGap(18, 18, 18)
                .addComponent(mskebab)
                .addGap(18, 18, 18)
                .addComponent(mkebab)
                .addGap(0, 40, Short.MAX_VALUE))
        );

        kebabsizepane.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        kebabsize.add(small);
        small.setText("Small $7.50");
        small.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        small.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                smallItemStateChanged(evt);
            }
        });

        kebabsize.add(medium);
        medium.setText("Medium $8.50");
        medium.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                mediumItemStateChanged(evt);
            }
        });

        kebabsize.add(large);
        large.setText("Large $10.00");
        large.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                largeItemStateChanged(evt);
            }
        });

        sizetitle.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        sizetitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        sizetitle.setText("Kebab Size");

        javax.swing.GroupLayout kebabsizepaneLayout = new javax.swing.GroupLayout(kebabsizepane);
        kebabsizepane.setLayout(kebabsizepaneLayout);
        kebabsizepaneLayout.setHorizontalGroup(
            kebabsizepaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(kebabsizepaneLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(kebabsizepaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(medium)
                    .addComponent(large)
                    .addComponent(small))
                .addGap(77, 77, 77))
            .addGroup(kebabsizepaneLayout.createSequentialGroup()
                .addComponent(sizetitle, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        kebabsizepaneLayout.setVerticalGroup(
            kebabsizepaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(kebabsizepaneLayout.createSequentialGroup()
                .addComponent(sizetitle, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE)
                .addComponent(small)
                .addGap(33, 33, 33)
                .addComponent(medium)
                .addGap(29, 29, 29)
                .addComponent(large)
                .addGap(54, 54, 54))
        );

        addonpane.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        addonstitle.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        addonstitle.setText("Each Add On: &3.50");

        sigsidestitle.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        sigsidestitle.setText("Signature Sides");

        dessertstitle.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        dessertstitle.setText("Desserts");

        softdrinktitle.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        softdrinktitle.setText("Soft Drinks");

        slaw.setText("Coleslaw");
        slaw.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                slawItemStateChanged(evt);
            }
        });

        salad.setText("Salad");
        salad.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                saladItemStateChanged(evt);
            }
        });

        bpie.setText("Banoffi Pie");
        bpie.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                bpieItemStateChanged(evt);
            }
        });

        cfcake.setText("Chocolate Fudge Cake");
        cfcake.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cfcakeItemStateChanged(evt);
            }
        });

        fanta.setText("500ml Fanta Fruit Twist");
        fanta.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                fantaItemStateChanged(evt);
            }
        });

        coke.setText("500ml Coke");
        coke.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cokeItemStateChanged(evt);
            }
        });

        water.setText("Bottle of Water");
        water.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                waterItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout addonpaneLayout = new javax.swing.GroupLayout(addonpane);
        addonpane.setLayout(addonpaneLayout);
        addonpaneLayout.setHorizontalGroup(
            addonpaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addonpaneLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(addonpaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(addonstitle, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sigsidestitle)
                    .addComponent(dessertstitle)
                    .addComponent(softdrinktitle)
                    .addGroup(addonpaneLayout.createSequentialGroup()
                        .addGroup(addonpaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(slaw)
                            .addComponent(bpie)
                            .addComponent(fanta))
                        .addGap(166, 166, 166)
                        .addGroup(addonpaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(addonpaneLayout.createSequentialGroup()
                                .addGroup(addonpaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(salad)
                                    .addComponent(cfcake))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(addonpaneLayout.createSequentialGroup()
                                .addComponent(coke)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 169, Short.MAX_VALUE)
                                .addComponent(water)
                                .addGap(1, 1, 1)))))
                .addGap(72, 72, 72))
        );
        addonpaneLayout.setVerticalGroup(
            addonpaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addonpaneLayout.createSequentialGroup()
                .addComponent(addonstitle, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(sigsidestitle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(addonpaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(slaw)
                    .addComponent(salad))
                .addGap(18, 18, 18)
                .addComponent(dessertstitle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(addonpaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bpie)
                    .addComponent(cfcake))
                .addGap(27, 27, 27)
                .addComponent(softdrinktitle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(addonpaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fanta)
                    .addComponent(coke)
                    .addComponent(water))
                .addGap(76, 76, 76))
        );

        orderpane.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        orderpane.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        ktypepro.setText("Kebab Type:");

        ksizepro.setText("Kebab Size:");

        addonpro.setText("Add Ons:");

        amtduepro.setText("Amount Due:");

        ktype.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        ktype.setText("-");

        ksize.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        ksize.setText("-");

        amtdue.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        amtdue.setText("-");

        addons.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        addons.setText("-");

        javax.swing.GroupLayout orderpaneLayout = new javax.swing.GroupLayout(orderpane);
        orderpane.setLayout(orderpaneLayout);
        orderpaneLayout.setHorizontalGroup(
            orderpaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(orderpaneLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(orderpaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(ktypepro, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ksizepro, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(addonpro, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(amtduepro, javax.swing.GroupLayout.DEFAULT_SIZE, 84, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(orderpaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ksize, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(amtdue, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(addons, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ktype, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        orderpaneLayout.setVerticalGroup(
            orderpaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(orderpaneLayout.createSequentialGroup()
                .addGroup(orderpaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ktypepro, javax.swing.GroupLayout.DEFAULT_SIZE, 17, Short.MAX_VALUE)
                    .addComponent(ktype, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(orderpaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ksizepro, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ksize, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(orderpaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addonpro, javax.swing.GroupLayout.DEFAULT_SIZE, 20, Short.MAX_VALUE)
                    .addComponent(addons, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(orderpaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(amtduepro)
                    .addComponent(amtdue, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        process.setText("Process Selection");
        process.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                processActionPerformed(evt);
            }
        });

        exitp.setText("Exit");
        exitp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitpActionPerformed(evt);
            }
        });

        title.setFont(new java.awt.Font("Algerian", 0, 24)); // NOI18N
        title.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        title.setText("WELCOME TO CALIFORNIA KEBAB SHOP");

        orderlabel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        orderlabel.setText("Your Order:");

        clearch.setText("Clear");
        clearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearchActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(title, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(kebabpane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(77, 77, 77)
                        .addComponent(kebabsizepane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(165, 165, 165))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(process, javax.swing.GroupLayout.DEFAULT_SIZE, 174, Short.MAX_VALUE)
                            .addComponent(clearch, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(exitp, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(orderlabel)
                                .addGap(0, 571, Short.MAX_VALUE))
                            .addComponent(orderpane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 53, Short.MAX_VALUE)
                        .addComponent(addonpane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 53, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(title)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(kebabpane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(kebabsizepane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(addonpane, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(orderlabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(orderpane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(21, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(process)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(clearch)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(exitp)
                        .addGap(38, 38, 38))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void exitpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitpActionPerformed
        System.exit(0);
    }//GEN-LAST:event_exitpActionPerformed

    private void processActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_processActionPerformed
        if((totalkebab == 0) & (totalsides ==0)){
            JOptionPane.showMessageDialog(null,"Please select at least one kebab or add on!");
        }
        else{
        ktype.setText("");
       ksize.setText("");
       addons.setText("");
       amtdue.setText("");
       JOptionPane.showMessageDialog(null,"Processing!");
       
       
       kebabclass pk = new kebabclass(totalkebab,sizen,totalsides, i1, i2); //object fixed!
       
       ktype.setText(String.valueOf(pk.returnkebabtype()));
       ksize.setText(String.valueOf(pk.returnsize()));
       addons.setText(String.valueOf(pk.returnsides()));
       amtdue.setText("$ " + String.valueOf(pk.returnprice()));
        }
       
    }//GEN-LAST:event_processActionPerformed

    private void mskebabItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_mskebabItemStateChanged
         if (evt.getStateChange()== ItemEvent.SELECTED){
         totalkebab ++ ;
         i1[5] = 5;
     
         }
     else {
         totalkebab -- ;
         i1[5] = 0;
         
     }
    }//GEN-LAST:event_mskebabItemStateChanged

    private void ckebabItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_ckebabItemStateChanged
         if (evt.getStateChange()== ItemEvent.SELECTED){
         totalkebab ++ ;
         i1[1] = 1;
          
     }
     else {
         totalkebab -- ;
         i1[1] = 0;

     }
    }//GEN-LAST:event_ckebabItemStateChanged

    private void smallItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_smallItemStateChanged
        if (evt.getStateChange() == ItemEvent.SELECTED){
           sizen = "Small";
       }
          else {
              sizen = " ";
          }
    }//GEN-LAST:event_smallItemStateChanged

    private void mediumItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_mediumItemStateChanged
        if (evt.getStateChange() == ItemEvent.SELECTED){
            sizen = "Medium";
        }
        else {
            sizen = " ";
        }
    }//GEN-LAST:event_mediumItemStateChanged

    private void largeItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_largeItemStateChanged
        if (evt.getStateChange() == ItemEvent.SELECTED){
           sizen = "Large";
        }
        else {
            sizen = " ";
        }
    }//GEN-LAST:event_largeItemStateChanged

    private void kkebabItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_kkebabItemStateChanged
         if (evt.getStateChange()== ItemEvent.SELECTED){
         totalkebab ++ ;
         i1[2] = 2;
     }
     else {
         totalkebab -- ;
         i1[2] = 0;

     }
    }//GEN-LAST:event_kkebabItemStateChanged

    private void kmcItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_kmcItemStateChanged
         if (evt.getStateChange()== ItemEvent.SELECTED){
         totalkebab ++ ;
         i1[3] = 3;
     }
     else {
         totalkebab -- ;
        i1[3] = 0;
     }
    }//GEN-LAST:event_kmcItemStateChanged

    private void cskebabItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cskebabItemStateChanged
         if (evt.getStateChange()== ItemEvent.SELECTED){
         totalkebab ++ ;
         i1[4] = 4;
     }
     else {
         totalkebab -- ;
         i1[4] = 0;

     }
    }//GEN-LAST:event_cskebabItemStateChanged

    private void mkebabItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_mkebabItemStateChanged
         if (evt.getStateChange()== ItemEvent.SELECTED){
         totalkebab ++ ;
         i1[6] = 6;
     }
     else {
         totalkebab -- ;
         i1[6] = 0;

     }
    }//GEN-LAST:event_mkebabItemStateChanged

    private void slawItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_slawItemStateChanged
          if (evt.getStateChange()== ItemEvent.SELECTED){
         totalsides ++ ;
         i2[1] = 1;
     }
     else {
         totalsides -- ;
         i2[1] = 0;
     }
    }//GEN-LAST:event_slawItemStateChanged

    private void saladItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_saladItemStateChanged
            if (evt.getStateChange()== ItemEvent.SELECTED){
         totalsides ++ ;
         i2[2] = 2;
     }
     else {
         totalsides -- ;
         i2[2] = 0;
     }
    }//GEN-LAST:event_saladItemStateChanged

    private void bpieItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_bpieItemStateChanged
            if (evt.getStateChange()== ItemEvent.SELECTED){
         totalsides ++ ;
         i2[3] = 3;
     }
     else {
         totalsides -- ;
         i2[3] = 0;
     }
    }//GEN-LAST:event_bpieItemStateChanged

    private void cfcakeItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cfcakeItemStateChanged
            if (evt.getStateChange()== ItemEvent.SELECTED){
         totalsides ++ ;
         i2[4] = 4;
     }
     else {
         totalsides -- ;
         i2[4] = 0;
     }
    }//GEN-LAST:event_cfcakeItemStateChanged

    private void fantaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_fantaItemStateChanged
             if (evt.getStateChange()== ItemEvent.SELECTED){
         totalsides ++ ;
         i2[5] = 5;
     }
     else {
         totalsides -- ;
         i2[5] = 0;
     }
    }//GEN-LAST:event_fantaItemStateChanged

    private void cokeItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cokeItemStateChanged
             if (evt.getStateChange()== ItemEvent.SELECTED){
         totalsides ++ ;
         i2[6] = 6;
     }
     else {
         totalsides -- ;
         i2[6] = 0;
         
     }
    }//GEN-LAST:event_cokeItemStateChanged

    private void waterItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_waterItemStateChanged
            if (evt.getStateChange()== ItemEvent.SELECTED){
         totalsides ++ ;
         i2[7] = 7;
     }
     else {
         totalsides -- ;
         i2[7] = 0;
     }
    }//GEN-LAST:event_waterItemStateChanged

    private void clearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearchActionPerformed
       ktype.setText("");
       ksize.setText("");
       addons.setText("");
       amtdue.setText("");
       ckebab.setSelected(false);
       kkebab.setSelected(false);
       kmc.setSelected(false);
       cskebab.setSelected(false);
       mskebab.setSelected(false);
       mkebab.setSelected(false);
       slaw.setSelected(false);
       salad.setSelected(false);
       bpie.setSelected(false);
       cfcake.setSelected(false);
       fanta.setSelected(false);
       coke.setSelected(false);
       water.setSelected(false);
       
    }//GEN-LAST:event_clearchActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(gui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(gui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(gui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(gui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new gui().setVisible(true);
                new gui().setLocationRelativeTo(null); // center frame
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel addonpane;
    private javax.swing.JLabel addonpro;
    private javax.swing.JLabel addons;
    private javax.swing.JLabel addonstitle;
    private javax.swing.JLabel amtdue;
    private javax.swing.JLabel amtduepro;
    private javax.swing.JCheckBox bpie;
    private javax.swing.JCheckBox cfcake;
    private javax.swing.JCheckBox ckebab;
    private javax.swing.JButton clearch;
    private javax.swing.JCheckBox coke;
    private javax.swing.JCheckBox cskebab;
    private javax.swing.JLabel dessertstitle;
    private javax.swing.JButton exitp;
    private javax.swing.JCheckBox fanta;
    private javax.swing.JPanel kebabpane;
    private javax.swing.ButtonGroup kebabsize;
    private javax.swing.JPanel kebabsizepane;
    private javax.swing.JLabel kebabtypetitle;
    private javax.swing.JCheckBox kkebab;
    private javax.swing.JCheckBox kmc;
    private javax.swing.JLabel ksize;
    private javax.swing.JLabel ksizepro;
    private javax.swing.JLabel ktype;
    private javax.swing.JLabel ktypepro;
    private javax.swing.JRadioButton large;
    private javax.swing.JRadioButton medium;
    private javax.swing.JCheckBox mkebab;
    private javax.swing.JCheckBox mskebab;
    private javax.swing.JLabel orderlabel;
    private javax.swing.JPanel orderpane;
    private javax.swing.JButton process;
    private javax.swing.JCheckBox salad;
    private javax.swing.JLabel sigsidestitle;
    private javax.swing.JLabel sizetitle;
    private javax.swing.JCheckBox slaw;
    private javax.swing.JRadioButton small;
    private javax.swing.JLabel softdrinktitle;
    private javax.swing.JLabel title;
    private javax.swing.JCheckBox water;
    // End of variables declaration//GEN-END:variables


   
//set default radio
    private void initJRadio(){
       small.setSelected(true);
    }
  
}
